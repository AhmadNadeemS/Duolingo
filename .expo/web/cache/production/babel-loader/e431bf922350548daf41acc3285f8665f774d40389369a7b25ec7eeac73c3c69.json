{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import PropTypes from\"prop-types\";import React,{useEffect,useState}from\"react\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import styles from\"./styles\";import ImageOption from\"../ImageOption\";import Button from\"../Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ImageMultipleChoiceQuestion=function ImageMultipleChoiceQuestion(_ref){var question=_ref.question,onCorrect=_ref.onCorrect,onWrong=_ref.onWrong;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var onButtonPress=function onButtonPress(){if(selected.correct){onCorrect();setSelected(null);}else{onWrong();}};return _jsxs(_Fragment,{children:[_jsx(Text,{style:styles.title,children:question.question}),_jsx(View,{style:styles.optionsContainer,children:question.options.map(function(option){return _jsx(ImageOption,{image:option.image,text:option.text,isSelected:selected&&selected.id===option.id,onPress:function onPress(){return setSelected(option);}},option.id);})}),_jsx(Button,{text:\"Check\",onPress:onButtonPress,disabled:!selected})]});};ImageMultipleChoiceQuestion.propTypes={question:PropTypes.shape({question:PropTypes.string.isRequired,options:PropTypes.arrayOf(PropTypes.shape({id:PropTypes.string,text:PropTypes.string,image:PropTypes.string,correct:PropTypes.bool})).isRequired}).isRequired};export default ImageMultipleChoiceQuestion;","map":{"version":3,"names":["PropTypes","React","useEffect","useState","Text","View","Image","StyleSheet","Alert","styles","ImageOption","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ImageMultipleChoiceQuestion","_ref","question","onCorrect","onWrong","_useState","_useState2","_slicedToArray","selected","setSelected","onButtonPress","correct","children","style","title","optionsContainer","options","map","option","image","text","isSelected","id","onPress","disabled","propTypes","shape","string","isRequired","arrayOf","bool"],"sources":["C:/Users/Dell/projects/Duolingo/src/components/ImageMultipleChoiceQuestion/ImageMultipleChoiceQuestion.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Text, View, Image, StyleSheet, Alert } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport ImageOption from \"../ImageOption\";\r\nimport Button from \"../Button\";\r\n\r\nconst ImageMultipleChoiceQuestion = ({ question, onCorrect, onWrong }) => {\r\n  const [selected, setSelected] = useState(null);\r\n  const onButtonPress = () => {\r\n    if (selected.correct) {\r\n      //   const nextIndex = currentQuestionIndex + 1;\r\n      //   setCurrentQuestionIndex(nextIndex);\r\n      onCorrect();\r\n      setSelected(null);\r\n    } else {\r\n      //   Alert.alert(\"Wrong.!\");\r\n      onWrong();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Text style={styles.title}>{question.question}</Text>\r\n      <View style={styles.optionsContainer}>\r\n        {question.options.map((option) => {\r\n          return (\r\n            <ImageOption\r\n              key={option.id}\r\n              image={option.image}\r\n              text={option.text}\r\n              isSelected={selected && selected.id === option.id}\r\n              onPress={() => setSelected(option)}\r\n            />\r\n          );\r\n        })}\r\n      </View>\r\n      <Button text=\"Check\" onPress={onButtonPress} disabled={!selected} />\r\n    </>\r\n  );\r\n};\r\n\r\nImageMultipleChoiceQuestion.propTypes = {\r\n  question: PropTypes.shape({\r\n    question: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        text: PropTypes.string,\r\n        image: PropTypes.string,\r\n        correct: PropTypes.bool,\r\n      })\r\n    ).isRequired,\r\n  }).isRequired,\r\n};\r\nexport default ImageMultipleChoiceQuestion;\r\n"],"mappings":"iEAAA,MAAO,CAAAA,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,KAAA,kDAAAC,UAAA,uDAAAC,KAAA,2CAEnD,MAAO,CAAAC,MAAM,gBACb,MAAO,CAAAC,WAAW,sBAClB,MAAO,CAAAC,MAAM,iBAAkB,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,GAAM,CAAAC,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAAAC,IAAA,CAAyC,IAAnC,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,SAAS,CAAAF,IAAA,CAATE,SAAS,CAAEC,OAAO,CAAAH,IAAA,CAAPG,OAAO,CACjE,IAAAC,SAAA,CAAgCpB,QAAQ,CAAC,IAAI,CAAC,CAAAqB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,GAAM,CAAAI,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,GAAIF,QAAQ,CAACG,OAAO,CAAE,CAGpBR,SAAS,EAAE,CACXM,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,IAAM,CAELL,OAAO,EAAE,CACX,CACF,CAAC,CACD,MACE,CAAAL,KAAA,CAAAF,SAAA,EAAAe,QAAA,EACEjB,IAAA,CAACT,IAAI,EAAC2B,KAAK,CAAEtB,MAAM,CAACuB,KAAM,CAAAF,QAAA,CAAEV,QAAQ,CAACA,QAAQ,EAAQ,CACrDP,IAAA,CAACR,IAAI,EAAC0B,KAAK,CAAEtB,MAAM,CAACwB,gBAAiB,CAAAH,QAAA,CAClCV,QAAQ,CAACc,OAAO,CAACC,GAAG,CAAC,SAACC,MAAM,CAAK,CAChC,MACE,CAAAvB,IAAA,CAACH,WAAW,EAEV2B,KAAK,CAAED,MAAM,CAACC,KAAM,CACpBC,IAAI,CAAEF,MAAM,CAACE,IAAK,CAClBC,UAAU,CAAEb,QAAQ,EAAIA,QAAQ,CAACc,EAAE,GAAKJ,MAAM,CAACI,EAAG,CAClDC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAd,WAAW,CAACS,MAAM,CAAC,EAAC,EAJ9BA,MAAM,CAACI,EAAE,CAKd,CAEN,CAAC,CAAC,EACG,CACP3B,IAAA,CAACF,MAAM,EAAC2B,IAAI,CAAC,OAAO,CAACG,OAAO,CAAEb,aAAc,CAACc,QAAQ,CAAE,CAAChB,QAAS,EAAG,GACnE,CAEP,CAAC,CAEDR,2BAA2B,CAACyB,SAAS,CAAG,CACtCvB,QAAQ,CAAEpB,SAAS,CAAC4C,KAAK,CAAC,CACxBxB,QAAQ,CAAEpB,SAAS,CAAC6C,MAAM,CAACC,UAAU,CACrCZ,OAAO,CAAElC,SAAS,CAAC+C,OAAO,CACxB/C,SAAS,CAAC4C,KAAK,CAAC,CACdJ,EAAE,CAAExC,SAAS,CAAC6C,MAAM,CACpBP,IAAI,CAAEtC,SAAS,CAAC6C,MAAM,CACtBR,KAAK,CAAErC,SAAS,CAAC6C,MAAM,CACvBhB,OAAO,CAAE7B,SAAS,CAACgD,IACrB,CAAC,CAAC,CACH,CAACF,UACJ,CAAC,CAAC,CAACA,UACL,CAAC,CACD,cAAe,CAAA5B,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}