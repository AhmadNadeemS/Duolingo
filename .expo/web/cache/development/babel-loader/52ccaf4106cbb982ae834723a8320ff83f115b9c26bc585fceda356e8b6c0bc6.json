{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles\";\nimport ImageOption from \"../ImageOption\";\nimport Button from \"../Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImageMultipleChoiceQuestion = function ImageMultipleChoiceQuestion(_ref) {\n  var question = _ref.question,\n    onCorrect = _ref.onCorrect,\n    onWrong = _ref.onWrong;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var onButtonPress = function onButtonPress() {\n    if (selected.correct) {\n      onCorrect();\n      setSelected(null);\n    } else {\n      onWrong();\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: question.question\n    }), _jsx(View, {\n      style: styles.optionsContainer,\n      children: question.options.map(function (option) {\n        return _jsx(ImageOption, {\n          image: option.image,\n          text: option.text,\n          isSelected: selected && selected.id === option.id,\n          onPress: function onPress() {\n            return setSelected(option);\n          }\n        }, option.id);\n      })\n    }), _jsx(Button, {\n      text: \"Check\",\n      onPress: onButtonPress,\n      disabled: !selected\n    })]\n  });\n};\nImageMultipleChoiceQuestion.propTypes = {\n  question: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      image: PropTypes.string,\n      correct: PropTypes.bool\n    })).isRequired\n  }).isRequired\n};\nexport default ImageMultipleChoiceQuestion;","map":{"version":3,"names":["PropTypes","React","useEffect","useState","Text","View","Image","StyleSheet","Alert","styles","ImageOption","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ImageMultipleChoiceQuestion","_ref","question","onCorrect","onWrong","_useState","_useState2","_slicedToArray","selected","setSelected","onButtonPress","correct","children","style","title","optionsContainer","options","map","option","image","text","isSelected","id","onPress","disabled","propTypes","shape","string","isRequired","arrayOf","bool"],"sources":["C:/Users/Dell/projects/Duolingo/src/components/ImageMultipleChoiceQuestion/ImageMultipleChoiceQuestion.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Text, View, Image, StyleSheet, Alert } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport ImageOption from \"../ImageOption\";\r\nimport Button from \"../Button\";\r\n\r\nconst ImageMultipleChoiceQuestion = ({ question, onCorrect, onWrong }) => {\r\n  const [selected, setSelected] = useState(null);\r\n  const onButtonPress = () => {\r\n    if (selected.correct) {\r\n      //   const nextIndex = currentQuestionIndex + 1;\r\n      //   setCurrentQuestionIndex(nextIndex);\r\n      onCorrect();\r\n      setSelected(null);\r\n    } else {\r\n      //   Alert.alert(\"Wrong.!\");\r\n      onWrong();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Text style={styles.title}>{question.question}</Text>\r\n      <View style={styles.optionsContainer}>\r\n        {question.options.map((option) => {\r\n          return (\r\n            <ImageOption\r\n              key={option.id}\r\n              image={option.image}\r\n              text={option.text}\r\n              isSelected={selected && selected.id === option.id}\r\n              onPress={() => setSelected(option)}\r\n            />\r\n          );\r\n        })}\r\n      </View>\r\n      <Button text=\"Check\" onPress={onButtonPress} disabled={!selected} />\r\n    </>\r\n  );\r\n};\r\n\r\nImageMultipleChoiceQuestion.propTypes = {\r\n  question: PropTypes.shape({\r\n    question: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        text: PropTypes.string,\r\n        image: PropTypes.string,\r\n        correct: PropTypes.bool,\r\n      })\r\n    ).isRequired,\r\n  }).isRequired,\r\n};\r\nexport default ImageMultipleChoiceQuestion;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAEnD,OAAOC,MAAM;AACb,OAAOC,WAAW;AAClB,OAAOC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/B,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAAC,IAAA,EAAyC;EAAA,IAAnCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EACjE,IAAAC,SAAA,GAAgCpB,QAAQ,CAAC,IAAI,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,IAAIF,QAAQ,CAACG,OAAO,EAAE;MAGpBR,SAAS,EAAE;MACXM,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MAELL,OAAO,EAAE;IACX;EACF,CAAC;EACD,OACEL,KAAA,CAAAF,SAAA;IAAAe,QAAA,GACEjB,IAAA,CAACT,IAAI;MAAC2B,KAAK,EAAEtB,MAAM,CAACuB,KAAM;MAAAF,QAAA,EAAEV,QAAQ,CAACA;IAAQ,EAAQ,EACrDP,IAAA,CAACR,IAAI;MAAC0B,KAAK,EAAEtB,MAAM,CAACwB,gBAAiB;MAAAH,QAAA,EAClCV,QAAQ,CAACc,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAK;QAChC,OACEvB,IAAA,CAACH,WAAW;UAEV2B,KAAK,EAAED,MAAM,CAACC,KAAM;UACpBC,IAAI,EAAEF,MAAM,CAACE,IAAK;UAClBC,UAAU,EAAEb,QAAQ,IAAIA,QAAQ,CAACc,EAAE,KAAKJ,MAAM,CAACI,EAAG;UAClDC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMd,WAAW,CAACS,MAAM,CAAC;UAAA;QAAC,GAJ9BA,MAAM,CAACI,EAAE,CAKd;MAEN,CAAC;IAAC,EACG,EACP3B,IAAA,CAACF,MAAM;MAAC2B,IAAI,EAAC,OAAO;MAACG,OAAO,EAAEb,aAAc;MAACc,QAAQ,EAAE,CAAChB;IAAS,EAAG;EAAA,EACnE;AAEP,CAAC;AAEDR,2BAA2B,CAACyB,SAAS,GAAG;EACtCvB,QAAQ,EAAEpB,SAAS,CAAC4C,KAAK,CAAC;IACxBxB,QAAQ,EAAEpB,SAAS,CAAC6C,MAAM,CAACC,UAAU;IACrCZ,OAAO,EAAElC,SAAS,CAAC+C,OAAO,CACxB/C,SAAS,CAAC4C,KAAK,CAAC;MACdJ,EAAE,EAAExC,SAAS,CAAC6C,MAAM;MACpBP,IAAI,EAAEtC,SAAS,CAAC6C,MAAM;MACtBR,KAAK,EAAErC,SAAS,CAAC6C,MAAM;MACvBhB,OAAO,EAAE7B,SAAS,CAACgD;IACrB,CAAC,CAAC,CACH,CAACF;EACJ,CAAC,CAAC,CAACA;AACL,CAAC;AACD,eAAe5B,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}