{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./App.styles\";\nimport ImageMultipleChoiceQuestion from \"./src/components/ImageMultipleChoiceQuestion/ImageMultipleChoiceQuestion\";\nimport OpenEndedQuestion from \"./src/components/OpenEndedQuestion\";\nimport questions from \"./assets/data/allQuestions\";\nimport Header from \"./src/components/Header\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FillInTheBlank from \"./src/components/FillInTheBlank/FillInTheBlank\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var _useState = useState(questions.length),\n    _useState2 = _slicedToArray(_useState, 2),\n    lives = _useState2[0],\n    setLives = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hasLoaded = _useState4[0],\n    setHasLoaded = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentQuestionIndex = _useState6[0],\n    setCurrentQuestionIndex = _useState6[1];\n  var _useState7 = useState(questions[currentQuestionIndex]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentQuestion = _useState8[0],\n    setCurrentQuestion = _useState8[1];\n  useEffect(function () {\n    if (currentQuestionIndex >= questions.length) {\n      Alert.alert(\"You won\");\n      setCurrentQuestionIndex(0);\n    } else {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n    }\n  }, [currentQuestionIndex]);\n  var onCorrect = function onCorrect() {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  var restart = function restart() {\n    setLives(questions.length);\n    setCurrentQuestionIndex(0);\n  };\n  var onWrong = function onWrong() {\n    if (lives <= 1) {\n      Alert.alert(\"Game over\", \"Try again\", [{\n        text: \"Try again\",\n        onPress: restart\n      }]);\n    } else {\n      Alert.alert(\"Wrong\");\n      setLives(lives - 1);\n    }\n  };\n  useEffect(function () {\n    loadData();\n  }, []);\n  useEffect(function () {\n    if (hasLoaded) {\n      saveData();\n    }\n  }, [lives, currentQuestionIndex, hasLoaded]);\n  var saveData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield AsyncStorage.setItem(\"lives\", lives.toString());\n      yield AsyncStorage.setItem(\"currentQuestionIndex\", currentQuestionIndex.toString());\n    });\n    return function saveData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var loadData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var loadedLives = yield AsyncStorage.getItem(\"lives\");\n      if (loadedLives) {\n        setLives(parseInt(loadedLives));\n      }\n      var currentQuestionIndex = yield AsyncStorage.getItem(\"currentQuestionIndex\");\n      if (currentQuestionIndex) {\n        setCurrentQuestionIndex(parseInt(currentQuestionIndex));\n      }\n      setHasLoaded(true);\n    });\n    return function loadData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!hasLoaded) {\n    return _jsx(ActivityIndicator, {});\n  }\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(Header, {\n      progress: currentQuestionIndex / questions.length,\n      lives: lives\n    }), currentQuestion.type === \"FILL_IN_THE_BLANK\" ? _jsx(FillInTheBlank, {\n      question: currentQuestion,\n      onCorrect: onCorrect,\n      onWrong: onWrong\n    }) : null]\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Text","View","Image","StyleSheet","Alert","ActivityIndicator","styles","ImageMultipleChoiceQuestion","OpenEndedQuestion","questions","Header","AsyncStorage","TextInput","FillInTheBlank","jsx","_jsx","jsxs","_jsxs","App","_useState","length","_useState2","_slicedToArray","lives","setLives","_useState3","_useState4","hasLoaded","setHasLoaded","_useState5","_useState6","currentQuestionIndex","setCurrentQuestionIndex","_useState7","_useState8","currentQuestion","setCurrentQuestion","alert","onCorrect","restart","onWrong","text","onPress","loadData","saveData","_ref","_asyncToGenerator","setItem","toString","apply","arguments","_ref2","loadedLives","getItem","parseInt","style","root","children","progress","type","question"],"sources":["C:/Users/Dell/projects/Duolingo/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n} from \"react-native\";\nimport styles from \"./App.styles\";\nimport ImageMultipleChoiceQuestion from \"./src/components/ImageMultipleChoiceQuestion/ImageMultipleChoiceQuestion\";\nimport OpenEndedQuestion from \"./src/components/OpenEndedQuestion\";\nimport questions from \"./assets/data/allQuestions\";\nimport Header from \"./src/components/Header\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { TextInput } from \"react-native\";\nimport FillInTheBlank from \"./src/components/FillInTheBlank/FillInTheBlank\";\n\nfunction App() {\n  const [lives, setLives] = useState(questions.length);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(\n    questions[currentQuestionIndex]\n  );\n  useEffect(() => {\n    if (currentQuestionIndex >= questions.length) {\n      Alert.alert(\"You won\");\n      setCurrentQuestionIndex(0);\n    } else {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n    }\n  }, [currentQuestionIndex]);\n\n  const onCorrect = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  const restart = () => {\n    setLives(questions.length);\n    setCurrentQuestionIndex(0);\n  };\n\n  const onWrong = () => {\n    if (lives <= 1) {\n      Alert.alert(\"Game over\", \"Try again\", [\n        {\n          text: \"Try again\",\n          onPress: restart,\n        },\n      ]);\n    } else {\n      Alert.alert(\"Wrong\");\n      setLives(lives - 1);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (hasLoaded) {\n      saveData();\n    }\n  }, [lives, currentQuestionIndex, hasLoaded]);\n\n  const saveData = async () => {\n    await AsyncStorage.setItem(\"lives\", lives.toString());\n    await AsyncStorage.setItem(\n      \"currentQuestionIndex\",\n      currentQuestionIndex.toString()\n    );\n  };\n\n  const loadData = async () => {\n    const loadedLives = await AsyncStorage.getItem(\"lives\");\n    if (loadedLives) {\n      setLives(parseInt(loadedLives));\n    }\n    const currentQuestionIndex = await AsyncStorage.getItem(\n      \"currentQuestionIndex\"\n    );\n    if (currentQuestionIndex) {\n      setCurrentQuestionIndex(parseInt(currentQuestionIndex));\n    }\n    setHasLoaded(true);\n  };\n\n  if (!hasLoaded) {\n    return <ActivityIndicator />;\n  }\n  return (\n    <View style={styles.root}>\n      <Header\n        progress={currentQuestionIndex / questions.length}\n        lives={lives}\n      />\n      {/* {currentQuestion.type === \"IMAGE_MULTIPLE_CHOICE\" ? (\n        <ImageMultipleChoiceQuestion\n          question={currentQuestion}\n          onCorrect={onCorrect}\n          onWrong={onWrong}\n        />\n      ) : null}\n      {currentQuestion.type === \"OPEN_ENDED\" ? (\n        <OpenEndedQuestion\n          question={currentQuestion}\n          onCorrect={onCorrect}\n          onWrong={onWrong}\n        />\n      ) : null} */}\n      {currentQuestion.type === \"FILL_IN_THE_BLANK\" ? (\n        <FillInTheBlank\n          question={currentQuestion}\n          onCorrect={onCorrect}\n          onWrong={onWrong}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}